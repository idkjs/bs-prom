// Generated by BUCKLESCRIPT VERSION 5.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");

function make(param) {
  var resolver = /* record */[/* contents */(function (prim) {
        return /* () */0;
      })];
  var p = new Promise((function (resolve, param) {
          resolver[0] = (function (a) {
              return resolve(a);
            });
          return /* () */0;
        }));
  return /* tuple */[
          p,
          resolver[0]
        ];
}

function map(p, mapper) {
  return p.then((function (v) {
                return Promise.resolve(Curry._1(mapper, v));
              }));
}

function flatMap(p, mapper) {
  return p.then(Curry.__1(mapper));
}

function $$catch(p, mapper) {
  return p.catch(Curry.__1(mapper));
}

function wrap(prim) {
  return Promise.resolve(prim);
}

function wait(p, waiter) {
  return map(p, Curry.__1(waiter));
}

function all(prim) {
  return Promise.all(prim);
}

exports.make = make;
exports.map = map;
exports.flatMap = flatMap;
exports.$$catch = $$catch;
exports.wrap = wrap;
exports.wait = wait;
exports.all = all;
/* No side effect */
